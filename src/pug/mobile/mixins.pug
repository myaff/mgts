mixin icon(iconName)
	svg&attributes(attributes).icon: use(xlink:href="#" + iconName)

//- social
mixin social(isInline, hasTitle)
	.social&attributes(attributes)(class=isInline ? "social--inline" : '')
		if hasTitle
			.social__title !{text.soc}
		#share

mixin navMenu(menuList)
	nav&attributes(attributes).nav-menu
		ul.nav-menu__list
			each item in menuList
				if layout == 'home' || (layout == 'detail' && item.key != 'home')
					li.nav-menu__item
						a.nav-menu__link(href=item.url, class= item.isActive ? '' : 'disabled', class= item.key == currentPage ? 'active' : '') !{item.title}

mixin modal(modalID)
	div&attributes(attributes).modal(id=modalID)
		.modal__close.btn.btn--plain.btn-close-modal
			+icon("cross").icon--block
		.modal__inner
			.modal__content
				block

mixin fieldInput(inpID, inpPlaceholder)
	.field.form__field
		label.field__label(for=inpID)
			input&attributes(attributes).field__input(id=inpID)
			.field__placeholder !{inpPlaceholder}
		block

mixin fieldTextarea(inpID, inpPlaceholder)
	.field.form__field
		label.field__label(for=inpID)
			textarea&attributes(attributes).field__input(id=inpID)
			.field__placeholder !{inpPlaceholder}
		block

mixin fieldSearch(inpID, inpPlaceholder)
	.field.form__field.field--search
		label.field__label(for=inpID)
			input&attributes(attributes).field__input(id=inpID)
			.field__placeholder !{inpPlaceholder}
		button.field__btn
			+icon('loupe')

mixin fieldCheckbox(inpID, inpText, fieldClass = false)
	.field.form__field.field--checkbox(class=fieldClass ? fieldClass : "")
		label.field__label(for=inpID)
			.field__box
				input&attributes(attributes).field__input(id=inpID, type="checkbox")
				.field__icon
					+icon('check')
			.field__text !{inpText}

mixin fieldRadio(inpID, inpText, fieldClass = false)
	.field.form__field.field--radio(class=fieldClass ? fieldClass : "")
		label.field__label(for=inpID)
			.field__box
				input&attributes(attributes).field__input(id=inpID, type="radio")
				.field__icon
					+icon('check')
			.field__text !{inpText}

mixin chm
	div&attributes(attributes).chm
		.l-container
			each item in ["ч", "м", 2, 0, 1, 8]
				.chm__symbol(class="chm__" + item)= item
